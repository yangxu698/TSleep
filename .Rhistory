library(rpart)
?rpart
library(randomForest)
?randomForest
library(caret)
help(train)
library("rpart")
library("randomForest")
library("ranger")
library("e1071")
##  Tree method ##
set.seed(10)
data1 = read.csv("/home/yang/Documents/Code/StatCourseCode/ProjectDataSet/1 Absenteeism at work Data Set /Absenteeism_at_work.csv",sep = ';')
data1 = data1[,-1]
y = ifelse(data1$Absenteeism.time.in.hours>3, 1, 0)
data1$Absenteeism.time.in.hours = y
cv_10= trainControl(method = "cv", number = 10)
data1$Absenteeism.time.in.hours = as.factor(data1$Absenteeism.time.in.hours)
cv_tree = train(data1$Absenteeism.time.in.hours ~ ., data = data1, trControl = cv_10, method = "rpart")
debug( cv_rf = train(data1$Absenteeism.time.in.hours ~ ., data = data1, trControl = cv_10, method = "rf"))
data1$Absenteeism.time.in.hours = as.factor(data1$Absenteeism.time.in.hours)
cv_tree = train(data1$Absenteeism.time.in.hours ~ ., data = data1, trControl = cv_10, method = "rpart")
debug()
?debug
cv_tree = train(data1$Absenteeism.time.in.hours ~ ., data = data1, trControl = cv_10, method = "rpart")
head(data1)
summary(data1)
cv_tree train(data1$Absenteeism.time.in.hours ~ ., data = data1, trControl = cv_10, method = "rpart")
cv_treet = train(data1$Absenteeism.time.in.hours ~ ., data = data1, trControl = cv_10, method = "rpart")
colnames(data1)
str(data1)
table(data1$Absenteeism.time.in.hours)
head(data1)
? train
install.packages("mboost")
library(glmboost)
library(glmboost)
install.packages("mboost")
cv_boosted_glm = train(y ~., data1,  trControl = cv_10, method = "gbm")
install.packages("rjdbc")
install.packages("gbm")
library(gbm)
?gbm
?bag
?createDataPartition
train = createDataPartition(data1, p = 0.6)
train = createDataPartition(data1, p = 0.6, list = F)
train = createDataPartition(data1, times = 2, p = 0.6, list = F)
createDataPartition(data1, times = 2, p = 0.6, list = F)
createDataPartition(data1, times = 2)
?glm
?for
?sample
install.packages("elasticnet")
install.packages("wsrf")
?randomForest
rep(50,2)
install.packages("devtools")
install.packages("libssl-dev")
install.packages("libssl-dev")
install.packages("devtools")
devtools::install_github('topepo/caret/pkg/caret')
MCMCResult = readRDS("/home/yang/EPIFIL/BaseBpt/MCMCResult/ParametersForBptNigeriaDokanTofa062218MBR4Chains.rds")
MCMCResult[[1]][[13]]
MCMCResult[[1]][[12]]
MCMCResult[[1]]
MCMCResult[[13]]
MCMCResult[[12]]
MCMCResult[[2]]
MCMCResult[[5]]
MCMCResult[[9]]
MCMCResult[[10]]
134/(134+26)
134/(134+44)
91/(91+26)
0.8375*0.7529/(0.8375+0.7529)*2
136/(136+24)
106/135
?confusionMatrix
library(caret)
?confusionMatrix
2*0.8242*0.85/(0.8242+0.85)
q()
quit()
library("dplyr")
library("lavaan")
library("magrittr")
##  Read the raw data ##
data_heat = read.csv("/home/yang/uaa_index/data/newdataJuly3/Heat_Indicators_Final.csv")
data_flood = read.csv("/home/yang/uaa_index/data/newdataJuly3/floodhazard data.csv")
data_cold = read.csv("/home/yang/uaa_index/data/newdataJuly3/coldhazard data.csv")
str(data_heat)
str(data_flood)
str(data_cold)
## Data Preprocess, remove columns ##
Heat_Indicators_Final = data_heat %>%
select(-OBJECTID_1,-NAME, -SQMI, -State, -County, -Geo_ID, -Community_rating.system_Score)
Flood_Indicators_Final = data_heat %>%
select(-OID,-NAME, -City, -State, -State.1, - County, - Geo_ID )
Cold_Indicators_Final = data_heat %>%
select(-OID,-NAME, -City, -State, -SQMI, -State.1, -County, -Geo_ID)
str(Heat_Indicators_Final)
str(data_heat)
colnames(data_heat)
warnings()
colnames(data_flood)
colnames(data_cold)
library("dplyr")
library("magrittr")
##  Read the raw data ##
data_heat = read.csv("/home/yang/uaa_index/data/newdataJuly3/Heat_Indicators_Final.csv")
data_flood = read.csv("/home/yang/uaa_index/data/newdataJuly3/floodhazard data.csv")
data_cold = read.csv("/home/yang/uaa_index/data/newdataJuly3/coldhazard data.csv")
library("lavaan")
setwd("C:/Users/yxu6/Tesserate")
setwd("~/yxu6/Tesserate")
setwd("~/Tesserate")
setwd("~/TSleep")
library(dplyr)
data0 = read.csv("derived_features_9_23.csv")
setwd("~/Tesserate")
data0 = read.csv("derived_features_9_23.csv")
setwd("C:/Users/yxu6/Tesserate")
setwd("./Tesserate")
getwd()
setwd("../TSleep")
